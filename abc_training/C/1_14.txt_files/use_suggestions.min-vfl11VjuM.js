define(["require","exports","tslib","react","typescript/component_libraries/flows/src/components/contact-typeahead/index","modules/clean/contacts/data_v2","modules/clean/contacts/types","modules/clean/viewer"],(function(e,t,n,o,s,a,c,i){"use strict";function u(e,t,n,o=!1,a=!1){if(!n)return[];const i=new Set;for(const e of t)i.add(s.getContactKey(e));const u=[];for(const t of n)if(t.email&&(t.type===c.default.DBX_ID||t.type===c.default.EMAIL)){if(a&&t.email===e.email)continue;if(o&&(!t.dbx_account_id||!t.dbx_team_id||t.dbx_team_id!==e.team_dbtid))continue;const n={name:t.name,email:t.email,avatarUrl:t.photo_url,dbx_account_id:t.dbx_account_id};i.has(s.getContactKey(n))||u.push(n)}return u}Object.defineProperty(t,"__esModule",{value:!0}),t.useSuggestions=void 0,c=n.__importDefault(c),t.useSuggestions=function(e,t,n=!1,s=!1){const[c,r]=o.useState(""),[d,l]=o.useState([]),_=i.Viewer.get_viewer().get_user_by_id(e),f=new a.ContactsDataSourceV2(_);return o.useEffect(()=>{let e=!1;const o=[];if(!c.length)return void l(o);return f.search(c,e=>{const a=u(_,t,e,n,s);o.push(...a),l(o)},a=>{const c=u(_,t,a,n,s);!e&&c.length>0&&(o.push(...c),l(o))}),()=>{e=!0}},[c,t]),{suggestions:d,onQueryChange:e=>{r(e)}}}}));
//# sourceMappingURL=use_suggestions.min.js-vflLDgteI.map