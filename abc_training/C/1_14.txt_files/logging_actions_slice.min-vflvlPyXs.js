define(["require","exports","@reduxjs/toolkit","modules/clean/react/integrations/pdf_editor/utils/logging_utils","modules/clean/logging/hive/schemas/web-edit_mode"],(function(e,i,t,o,n){"use strict";var r;Object.defineProperty(i,"__esModule",{value:!0}),i.reducer=i.startTimer=i.setFileIdForLogging=i.setFileExtensionForLogging=i.setEditViewForLogging=i.loggingActionsSlice=i.stopTimerAndReport=i.logOperation=i.logError=i.logUserAction=void 0;const g={fileid:void 0,edit_view:n.PDFEditingEditView.LIST,file_extension:n.PDFEditingFileExtension.PDF,metric_and_timer:void 0};function s(e){let i=" ";return void 0===e.file_obj_id&&(i+="The fileid is missing. "),void 0===e.edit_view&&(i+="The edit view is missing. "),void 0===e.file_extension&&(i+="The file extension is missing. "),i}i.logUserAction=t.createAsyncThunk("loggingActions/logUserAction",(e,i)=>{const t=i.getState(),n=e.extra?e.extra:{},r={event_name:e.eventName,timestamp:Date.now(),extra:n,file_obj_id:t.loggingActions.fileid,edit_view:t.loggingActions.edit_view,file_extension:t.loggingActions.file_extension},g=void 0===(l={event_name:r.event_name,timestamp:r.timestamp,extra:r.extra,file_obj_id:r.file_obj_id,edit_view:r.edit_view,file_extension:r.file_extension}).file_obj_id||void 0===l.edit_view||void 0===l.file_extension?null:{event_name:l.event_name,timestamp:l.timestamp,extra:l.extra,file_obj_id:l.file_obj_id,edit_view:l.edit_view,file_extension:l.file_extension};var l;if(null!=g){try{o.logProductMetric(g)}catch(e){const i=["Third-Party-Integrations","Legacy Logging"];o.logException({exclogError:new Error(e),exclogSeverity:o.ERROR_SEVERITY.OPERATIONAL,exclogExtra:i})}try{o.logProductMetricPAP(g)}catch(e){const i=["Third-Party-Integrations","PAP Logging"];o.logException({exclogError:new Error(e),exclogSeverity:o.ERROR_SEVERITY.OPERATIONAL,exclogExtra:i})}}else{const e=["Third-Party-Integrations","PDF Editor Logging Error"];o.logException({exclogError:new Error("Data is not valid."+s(r)),exclogSeverity:o.ERROR_SEVERITY.OPERATIONAL,exclogExtra:e})}}),i.logError=t.createAsyncThunk("loggingActions/logError",(e,i)=>{o.logException(e)}),i.logOperation=t.createAsyncThunk("loggingActions/logOperation",(e,i)=>{o.logOperationMetric(e)}),i.stopTimerAndReport=t.createAsyncThunk("loggingActions/stopTimerAndReport",(e,i)=>{var t;const n=i.getState();n.loggingActions.metric_and_timer?n.loggingActions.metric_and_timer.has(e)?(null===(t=n.loggingActions.metric_and_timer.get(e))||void 0===t||t.record(),n.loggingActions.metric_and_timer.delete(e)):o.logException({exclogError:new Error("The timer corresponding to "+e+" does not exist."),exclogSeverity:o.ERROR_SEVERITY.OPERATIONAL,exclogExtra:["Third-Party-Integrations","PDF Editor AMP Logging Error"]}):o.logException({exclogError:new Error("The timer state is not initiated."),exclogSeverity:o.ERROR_SEVERITY.OPERATIONAL,exclogExtra:["Third-Party-Integrations","PDF Editor AMP Logging Error"]})}),i.loggingActionsSlice=t.createSlice({name:"loggingActions",initialState:g,reducers:{setEditViewForLogging:(e,i)=>{e.edit_view=i.payload},setFileExtensionForLogging:(e,i)=>{e.file_extension=i.payload},setFileIdForLogging:(e,i)=>{e.fileid=i.payload},startTimer:(e,i)=>{const t=i.payload.ampTags?i.payload.ampTags:{},n=o.startAndRetrieveTimer({ampMetrics:i.payload.ampMetrics,ampTags:t});if(e.metric_and_timer)e.metric_and_timer.set(i.payload.ampMetrics,n);else{const t=new Map;t.set(i.payload.ampMetrics,n),e.metric_and_timer=t}}}}),r=i.loggingActionsSlice.actions,i.setEditViewForLogging=r.setEditViewForLogging,i.setFileExtensionForLogging=r.setFileExtensionForLogging,i.setFileIdForLogging=r.setFileIdForLogging,i.startTimer=r.startTimer,i.reducer=i.loggingActionsSlice.reducer}));
//# sourceMappingURL=logging_actions_slice.min.js-vflqj7hys.map