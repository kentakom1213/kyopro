define("modules/clean/security/sjcl_crypto",["require","exports","tslib","sjcl"],(function(e,t,s,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getRandomValues=void 0,n=s.__importStar(n),t.getRandomValues=function(e){const t=n.random.randomWords(e.length);for(let s=0,n=e.length,r=0<=n;r?s<n:s>n;r?s++:s--)e[s]=t[s];return e}})),define("modules/clean/uuid/uuid",["require","exports","modules/clean/uuid/insecure_uuid","modules/clean/security/sjcl_crypto"],(function(e,t,s,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UUID=void 0;const r=/generator isn't seeded/;class o extends s.InsecureUUID{static getRandomBytes(e={}){const t=new Array(16);try{n.getRandomValues(t)}catch(s){if(s.message.match(r)&&e.allowInsecure)return this.getInsecureRandomValues(t);throw s}return t.map(e=>this.toByte(e))}static v4(e={}){const t=this.getRandomBytes({allowInsecure:e.allowInsecure});return t[6]=15&t[6]|64,t[8]=63&t[8]|128,this.bytesToUUIDString(t)}}t.UUID=o}));
//# sourceMappingURL=pkg-core-uuid.min.js-vfldDfVVz.map