define(["require","exports","tslib","react","typescript/libraries/comments2/src/components/comment_editor/draft_utils"],(function(t,e,n,c,o){"use strict";function a(t,e=100){const n=t.content.text;if(n.length<=e)return t;const c=n.split("\n").map(o.decodeUnicode);let a=[];for(let t=0,n=0;n<c.length&&t<e;n++){const o=c[n],i=e-t;i<o.length?(a=[...a,o.slice(0,i)],t=e):(a=[...a,o],t+=o.length)}const i=a.map(o.encodeUnicode).join("\n"),r=t.content.metadata;return Object.assign(Object.assign({},t),{content:{metadata:r.reduce((function(t,n){if("sticker"===n.type||"guest"===n.type||"reel"===n.type||"approval"===n.type)return[...t,n];const c=n.location;return c.start<e?[...t,Object.assign(Object.assign({},n),{location:Object.assign(Object.assign({},c),{end:Math.min(c.end,e)})})]:t}),[]),text:`${i}â€¦`}})}Object.defineProperty(e,"__esModule",{value:!0}),e.truncateComment=e.TruncatedComment=void 0,c=n.__importDefault(c),e.TruncatedComment=({comment:t,limit:e,children:n})=>n(c.default.useMemo(()=>a(t,e),[t,e])),e.TruncatedComment.displayName="TruncatedComment",e.TruncatedComment.displayName="TruncatedComment",e.truncateComment=a}));
//# sourceMappingURL=comment_utils.amd.min.js-vfl8CFmBW.map