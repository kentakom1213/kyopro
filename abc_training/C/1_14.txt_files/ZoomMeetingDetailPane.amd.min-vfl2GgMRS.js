define(["require","exports","tslib","react","react-redux","typescript/libraries/file-viewer/src/css/zoom.css","typescript/libraries/file-viewer/src/zoom/actions","typescript/libraries/file-viewer/src/plugins/index","typescript/libraries/file-viewer/src/zoom/plugin/components/ZoomPaneIds","typescript/libraries/file-viewer/src/zoom/selectors"],(function(e,t,n,i,r,o,s,l,a,c){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ConnectedZoomMeetingDetailPane=t.UnconnectedZoomMeetingDetailPane=void 0,i=n.__importStar(i),o=n.__importStar(o);const u=i.lazy(()=>new Promise((t,n)=>{e(["typescript/component_libraries/deep-integrations/src/zoom_extension/meeting_detail_view"],t,n)}).then(n.__importStar).then(e=>({default:e.MeetingDetailView})));class p extends i.PureComponent{constructor(){super(...arguments),this.getInviteesUserInfo=()=>{const{meeting:e}=this.props;if(!e)return[];const t=[...e.invitees];return-1===t.indexOf(e.host_dropbox_account_id)&&t.unshift(e.host_dropbox_account_id),t.map(e=>{const t=this.props.usersAccountInfo[e];if(t)return{userInfo:t,active:!0}}).filter(Boolean)}}render(){const e=this.props,{meeting:t}=e,r=n.__rest(e,["meeting"]);return i.createElement("div",{className:o.zoomPaneContainer},i.createElement(l.PaneTitle,{backButtonMessages:a.getZoomBackButtonMessages(this.props.intl)}),i.createElement(i.Suspense,{fallback:this.props.intl.formatMessage({id:"W/23CF",defaultMessage:"Loading..."})},t&&i.createElement("div",{className:o.zoomMeetingDetailContainer},i.createElement(u,Object.assign({},r,{invitees:this.getInviteesUserInfo(),meetingForFile:t,intl:this.props.intl})))))}}t.UnconnectedZoomMeetingDetailPane=p,p.displayName="UnconnectedZoomMeetingDetailPane";const m=r.connect((e,t)=>({meeting:c.getCurrentlyViewedMeeting(e,t.fileViewerId,t.file.fileId),usersAccountInfo:e.users,isZoomConnected:c.isZoomConnected(e)}),(e,t)=>{const{navigation:n}=t;return{startZoomMeeting:e=>{e.start_url&&n.openUrl({url:e.start_url.client_url||e.start_url.http_url,fallbackUrl:e.start_url.http_url})},joinZoomMeeting:e=>{n.openUrl({url:e.join_url.client_url||e.join_url.http_url,fallbackUrl:e.join_url.http_url})},viewZoomMeetingRecord:e=>{let t,i;e.default_folder.client_url?(t=new URL(e.default_folder.client_url),i=new URL(e.default_folder.http_url)):t=new URL(e.default_folder.http_url),n.openUrl({url:t,fallbackUrl:i})},connectZoom:()=>e(s.authService({serviceId:"zoom"})),logEvent:t=>{e(s.logZoomEvent({event:t}))}}})(p);t.ConnectedZoomMeetingDetailPane=m}));
//# sourceMappingURL=ZoomMeetingDetailPane.amd.min.js-vflzKIB_t.map