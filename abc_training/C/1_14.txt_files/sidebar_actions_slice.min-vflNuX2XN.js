define(["require","exports","tslib","@reduxjs/toolkit","modules/clean/security/crypto"],(function(a,e,t,i,n){"use strict";var l;Object.defineProperty(e,"__esModule",{value:!0}),e.reducer=e.updatePageOrder=e.removeThumbnailPage=e.clearThumbnailData=e.cancelThumbnailLoad=e.setCallId=e.setThumbnailData=e.insertThumbnailPages=e.setLoadingDocumentPageThumbnail=e.setInitialPageOrder=e.sidebarActionsSlice=e.cancelAllThumbnailRequestsInList=e.cancelAllThumbnailRequestsAtAfterIndex=e.updateThumbnailWithCreateDocumentPageThumbnailReply=void 0;e.updateThumbnailWithCreateDocumentPageThumbnailReply=i.createAsyncThunk("sidebarActions/updateThumbnailWithCreateDocumentPageThumbnailReply",(a,i)=>t.__awaiter(void 0,void 0,void 0,(function*(){const{thumbnailImageData:t,height:l,width:d,pageNumber:s}=a,o=yield n.hashSHA256(new Uint8Array(t));i.dispatch(e.setThumbnailData({index:s,data:{data:t,height:l,width:d},thumbnailID:o.toString()}))}))),e.cancelAllThumbnailRequestsAtAfterIndex=i.createAsyncThunk("sidebarActions/cancelAllThumbnailRequestsAtAfterIndex",(a,e)=>t.__awaiter(void 0,void 0,void 0,(function*(){const t=e.getState().sidebarActions.pagesData.slice(a).map(a=>a.callId);d(t,e)}))),e.cancelAllThumbnailRequestsInList=i.createAsyncThunk("sidebarActions/cancelAllThumbnailRequestsInList",(a,e)=>t.__awaiter(void 0,void 0,void 0,(function*(){const t=e.getState(),i=a.map(a=>t.sidebarActions.pagesData[a].callId);d(i,e)})));const d=(a,t)=>{for(const i of a)i&&(t.dispatch({type:"message_bus_action/cancel_document_page_thumbnail_action",payload:i}),t.dispatch(e.cancelThumbnailLoad(i)))};e.sidebarActionsSlice=i.createSlice({name:"sidebarActions",initialState:{pagesData:[],thumbnailCache:{}},reducers:{setInitialPageOrder:(a,e)=>{a.pagesData=[];for(let t=0;t<e.payload;t++)a.pagesData.push({isLoading:!1})},setLoadingDocumentPageThumbnail:(a,e)=>{a.pagesData[e.payload].isLoading=!0,a.pagesData[e.payload].loadingStart=(new Date).getTime()},setThumbnailData:(a,e)=>{a.pagesData[e.payload.index].isLoading=!1,a.pagesData[e.payload.index].loadingStart=void 0,a.pagesData[e.payload.index].callId=void 0,a.pagesData[e.payload.index].thumbnailID=e.payload.thumbnailID,a.thumbnailCache[e.payload.thumbnailID]=e.payload.data},setCallId:(a,e)=>{a.pagesData[e.payload.index].callId=e.payload.callId},insertThumbnailPages:(a,e)=>{const t={isLoading:!1};for(let i=0;i<e.payload.pagesInserted;i++)a.pagesData.splice(e.payload.endIndex+i,0,t)},cancelThumbnailLoad:(a,e)=>{const t=a.pagesData.findIndex(a=>a.callId===e.payload);a.pagesData[t].isLoading=!1,a.pagesData[t].loadingStart=void 0,a.pagesData[t].callId=void 0},clearThumbnailData:(a,e)=>{for(const t of e.payload){const e=a.pagesData[t].thumbnailID;a.pagesData[t].thumbnailID=void 0,-1===a.pagesData.findIndex(a=>a.thumbnailID===e)&&delete a.thumbnailCache[e]}},removeThumbnailPage:(a,e)=>{e.payload.sort(),e.payload.reverse();for(const t of e.payload)a.pagesData.splice(t,1)},updatePageOrder:(a,e)=>{a.pagesData=e.payload}}}),l=e.sidebarActionsSlice.actions,e.setInitialPageOrder=l.setInitialPageOrder,e.setLoadingDocumentPageThumbnail=l.setLoadingDocumentPageThumbnail,e.insertThumbnailPages=l.insertThumbnailPages,e.setThumbnailData=l.setThumbnailData,e.setCallId=l.setCallId,e.cancelThumbnailLoad=l.cancelThumbnailLoad,e.clearThumbnailData=l.clearThumbnailData,e.removeThumbnailPage=l.removeThumbnailPage,e.updatePageOrder=l.updatePageOrder,e.reducer=e.sidebarActionsSlice.reducer}));
//# sourceMappingURL=sidebar_actions_slice.min.js-vflxPHRGv.map