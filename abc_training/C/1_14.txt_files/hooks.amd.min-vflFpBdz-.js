define(["require","exports","api_v2/redux/comments2","typescript/libraries/comments2/src/components/comment/index","typescript/component_libraries/files_components/src/blades/comments/component/context","react","react-redux","typescript/component_libraries/files_components/src/blades/comments/data/actions","typescript/component_libraries/files_components/src/blades/comments/data/selectors","typescript/component_libraries/files_components/src/blades/comments/component/comment_component_wrapper"],(function(e,t,s,n,o,i,c,m,r,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useResetThreads=t.useListComments=t.useCommentsComponent=void 0,t.useCommentsComponent=function({fileId:e}){switch(c.useSelector(t=>r.getAnnotationType(t,e))){case"audio":case"video":return n.TimeCodedComment;case"document":return n.NumberedComment;default:return a.BaseComment}},t.useListComments=function({fileId:e}){const t=c.useDispatch();i.useEffect(()=>{t(s.listCommentsAction({arg:{include_permissions:!0,stream:{identifier:{".tag":"file_path_or_id",file_path_or_id:e},type:{".tag":"file"}}}}))},[e,t])},t.useResetThreads=function({fileId:e}){const t=c.useDispatch(),{commentBladeId:s}=o.useBasicCommentsBladeContext();i.useEffect(()=>{t(m.deactivateAllThreads({fileViewerId:s})),t(m.focusThread(s,null))},[e,t,s])}}));
//# sourceMappingURL=hooks.amd.min.js-vfl-mAkLI.map