define(["require","exports","tslib","react","react-redux","typescript/libraries/file-viewer/src/watermarking/plugin/redux/index","typescript/libraries/file-viewer/src/css/watermarking_plugin.css","typescript/libraries/file-viewer/src/watermarking/plugin/utils/index","typescript/libraries/file-viewer/src/watermarking/plugin/selectors"],(function(e,t,a,i,r,s,n,o,c){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WatermarkingLayer=void 0,i=a.__importDefault(i),n=a.__importStar(n);const l=({mode:e,watermarkOptions:t,imageWatermarkOptions:a,textWatermarkOptions:r,ui:{scaleFactor:s}})=>{const[c,l]=i.default.useState(0),[m,g]=i.default.useState(0);return i.default.createElement("canvas",{height:c,width:m,className:n.watermarkingPreviewLayer,ref:i=>{null!=i&&(l(i.clientHeight),g(i.clientWidth),(({canvas:e,scale:t,mode:a,watermarkOptions:i,textWatermarkOptions:r,imageWatermarkOptions:s})=>{const n=e.getContext("2d");if(null!==n){n.clearRect(0,0,e.width,e.height);const{position:c,marginX:l,marginY:m}=i;if("REPEAT"===c){let i;try{i=o.tilingFunc({scale:t,mode:a,textWatermarkOptions:r,imageWatermarkOptions:s})}catch(e){if("NO_TILE_INPUT"===e.message)return;throw e}let c=0,l=0;for(let t=(i.startY+l)%i.distanceY-i.height;t<e.height;t+=i.distanceY){for(let a=(i.startX+c)%i.distanceX-i.width;a<e.width;a+=i.distanceX)n.drawImage(i.canvas,a,t);c+=i.offsetXPerRow,l+=i.offsetYPerCol}}else{let i;if("text"===a){const{text:e,size:a,fontFamily:s,color:n,opacity:c,angle:l}=r;i=o.drawTextTile({text:e,size:a*t,fontFamily:s,color:n,opacity:c,angle:l}).canvas}else{const{image:e,size:a,opacity:r,angle:n}=s;if(!e)return;i=o.drawImageTile({image:e,scale:a*t,opacity:r,angle:n}).canvas}const g=l*t,d=m*t;let p=g,h=d;"CENTER"===c?(p=(e.width-i.width)/2,h=(e.height-i.height)/2):"NORTHEAST"===c?p=e.width-i.width-g:"SOUTHWEST"===c?h=e.height-i.height-d:"SOUTHEAST"===c&&(p=e.width-i.width-g,h=e.height-i.height-d),n.drawImage(i,p,h)}}})({canvas:i,scale:s,mode:e,watermarkOptions:t,imageWatermarkOptions:a,textWatermarkOptions:r}))}})};l.displayName="UnconnectedWatermarkingLayer";t.WatermarkingLayer=r.connect((e,{context:{fileViewerId:t}})=>{const{mode:a,imageWatermarkOptions:i,textWatermarkOptions:r}=e;return{mode:a[t],watermarkOptions:c.getCurrentWatermarkOptions(t,e),imageWatermarkOptions:i[t],textWatermarkOptions:r[t]}},(e,{context:{fileViewerId:t}})=>({setImageWatermarkOptions:a=>e(s.setImageWatermarkOptions(t,a))}))(l)}));
//# sourceMappingURL=watermarking_layer.amd.min.js-vflld_2fu.map